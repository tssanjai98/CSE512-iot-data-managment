[2024-12-02 02:00:01,408] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-12-02 02:00:01,413] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-12-02 02:00:01,416] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-12-02 02:00:01,416] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-12-02 02:04:08,408] DEBUG [Controller id=0] Delete topics listener fired for topics car-sensors to be deleted (kafka.controller.KafkaController)
[2024-12-02 02:04:08,409] INFO [Controller id=0] Starting topic deletion for topics car-sensors (kafka.controller.KafkaController)
[2024-12-02 02:04:08,409] INFO [Topic Deletion Manager 0] Handling deletion for topics car-sensors (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:08,409] INFO [Topic Deletion Manager 0] Deletion of topic car-sensors (re)started (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:08,419] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-12-02 02:04:08,457] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(car-sensors-0 -> NONE) (kafka.controller.KafkaController)
[2024-12-02 02:04:08,458] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=car-sensors,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:08,458] INFO [Topic Deletion Manager 0] Handling deletion for topics car-sensors (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:08,544] INFO [Topic Deletion Manager 0] Deletion of topic car-sensors successfully completed (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:08,547] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-12-02 02:04:08,547] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-12-02 02:04:15,837] DEBUG [Controller id=0] Delete topics listener fired for topics car-sensors-aggregated to be deleted (kafka.controller.KafkaController)
[2024-12-02 02:04:15,838] INFO [Controller id=0] Starting topic deletion for topics car-sensors-aggregated (kafka.controller.KafkaController)
[2024-12-02 02:04:15,838] INFO [Topic Deletion Manager 0] Handling deletion for topics car-sensors-aggregated (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:15,838] INFO [Topic Deletion Manager 0] Deletion of topic car-sensors-aggregated (re)started (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:15,872] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(car-sensors-aggregated-0 -> NONE) (kafka.controller.KafkaController)
[2024-12-02 02:04:15,872] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=car-sensors-aggregated,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:15,872] INFO [Topic Deletion Manager 0] Handling deletion for topics car-sensors-aggregated (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:15,900] INFO [Topic Deletion Manager 0] Deletion of topic car-sensors-aggregated successfully completed (kafka.controller.TopicDeletionManager)
[2024-12-02 02:04:15,900] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-12-02 02:04:15,901] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-12-02 02:05:01,420] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-12-02 02:05:01,422] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-12-02 02:05:01,426] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-12-02 02:05:01,426] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-12-02 02:07:17,752] INFO [Controller id=0] New topics: [Set(car-sensors)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(car-sensors,Some(RsfcZ82pSi2WVZQwD9bkWw),Map(car-sensors-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-12-02 02:07:17,753] INFO [Controller id=0] New partition creation callback for car-sensors-0 (kafka.controller.KafkaController)
[2024-12-02 02:07:19,797] INFO [Controller id=0] New topics: [HashSet(car-sensors-aggregated)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(car-sensors-aggregated,Some(Q71g5ZTcQhKYlL5RBnrgHg),Map(car-sensors-aggregated-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-12-02 02:07:19,797] INFO [Controller id=0] New partition creation callback for car-sensors-aggregated-0 (kafka.controller.KafkaController)
[2024-12-02 02:10:01,432] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-12-02 02:10:01,433] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-12-02 02:10:01,439] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-12-02 02:10:01,439] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-12-02 02:15:01,438] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-12-02 02:15:01,439] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-12-02 02:15:01,442] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-12-02 02:15:01,442] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-12-02 02:17:52,703] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-12-02 02:17:52,704] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-12-02 02:17:52,705] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-12-02 02:17:52,709] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),car-sensors-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),car-sensors-aggregated-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),cars-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),cars_aggregated-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-12-02 02:17:53,064] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-12-02 02:17:53,064] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-12-02 02:17:53,064] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-12-02 02:17:53,064] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-12-02 02:17:53,064] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-12-02 02:17:53,065] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-12-02 02:17:53,065] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-12-02 02:17:53,065] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-12-02 02:17:53,065] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-12-02 02:17:53,065] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-12-02 02:17:53,066] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
